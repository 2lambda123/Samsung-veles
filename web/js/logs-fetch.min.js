function mongoRequest(e,t,n,s){var i=new XMLHttpRequest;i.open("POST","service",!0),i.onload=function(){4==i.readyState&&200==i.status&&(result=JSON.parse(i.responseText).result,s(result))};var a={request:e};a[t]=n,i.send(JSON.stringify(a))}function installSlaveEvents(e){for(var t=1;t<event_names.length;t++){series_data[1][t].length=0;var n=e.events[event_names[t]].data;for(var s in n)series_data[1][t].push(n[s])}}function finalizeFetch(e,t,n){var s="master"==e.id?"master":"slave";"slave"!=s||t||installSlaveEvents(e),"complete"===document.readyState&&("master"==e.id?$("#chart-loading-master").hide():$("#chart-loading-slave").hide()),fetching_events[s]=!1,fetching_events.master||fetching_events.slave||(need_fetch?fetchEvents():"complete"===document.readyState&&renderEvents()),void 0!=n&&n(e)}function fetchEventsForNode(e,t){if(!e.initialized)return void initialFetchEventsForNode(e,fetchEventsForNode);void 0==t&&(t=!1),fetching_events["master"==e.id?"master":"slave"]=!0;var n=current_min_time,s=current_max_time,i=[];for(var a in e.events){var m=e.events[a];m.fetch&&(m.min_fetch_time>n||m.max_fetch_time<s)&&i.push(a)}return 0==i.length?void finalizeFetch(e,!t):("master"==e.id?$("#chart-loading-master").show():$("#chart-loading-slave").show(),void mongoRequest("events","aggregate",[{$match:{session:session,instance:e.id,name:{$in:i},time:{$gt:n,$lt:s}}},{$group:{_id:{name:"$name"},count:{$sum:1},min:{$min:"$time"},max:{$max:"$time"}}}],function(a){i=[];for(var m in a){var o=a[m],l=e.events[o._id.name].data;l.length=0,o.count<=max_count?i.push(o._id.name):(l.push({x:o.min-smallest_time,y:0,event:too_many}),l.push({x:o.min-smallest_time,y:1,event:too_many}),l.push({x:o.max-smallest_time,y:1,event:too_many}),l.push({x:o.max-smallest_time,y:0,event:too_many}))}i.length>0?mongoRequest("events","find",{session:session,instance:e.id,name:{$in:i},time:{$gt:n,$lt:s}},function(t){setEvents(e,t);for(var a in i){var m=e.events[i[a]];m.min_fetch_time=n,m.max_fetch_time=s}finalizeFetch(e,!1)}):finalizeFetch(e,!t)}))}function fetchEvents(){return fetching_events.master||fetching_events.slave?void(need_fetch=!0):(need_fetch=!1,fetchEventsForNode(nodes[nodes_mapping.master]),void fetchEventsForNode(selected_slave))}function setEvents(e,t){var n={_id:null,time:null,name:null,session:null,instance:null,height:null};for(var s in t){var i=t[s],a={};for(var m in i)void 0===n[m]&&(a[m]=i[m]);a=JSON.stringify(a);var o=i.time-smallest_time,l=void 0!=i.height?i.height:1,r=e.events[i.name].data;"single"!==i.type?("begin"===i.type&&r.push({x:o,y:0}),r.push({x:o,y:l,event:a}),"end"===i.type&&r.push({x:o,y:0})):(r.push({x:o,y:0,event:a}),r.push({x:o,y:l,event:a}),r.push({x:o,y:0,event:a}))}}function initialFetchEventsForNode(e,t){fetching_events["master"==e.id?"master":"slave"]=!0;var n={session:session,instance:e.id,name:{$in:[]}};for(var s in e.events){var i=e.events[s];i.count<=max_count?(i.fetch=!1,n.name.$in.push(i.name)):(i.data.push({x:i.min-smallest_time,y:0,event:too_many}),i.data.push({x:i.min-smallest_time,y:1,event:too_many}),i.data.push({x:i.max-smallest_time,y:1,event:too_many}),i.data.push({x:i.max-smallest_time,y:0,event:too_many}),i.min_fetch_time=smallest_time,i.max_fetch_time=smallest_time)}n.name.$in.length>0?mongoRequest("events","find",n,function(n){setEvents(e,n),finalizeFetch(e,!1,t),e.initialized=!0}):(e.initialized=!0,void 0!=t&&t(e))}function fetchLogsForNode(e,t){var n="master"==e?"master":"slave";fetching_logs[n]=!0,"complete"===document.readyState&&($("#logs-contents-"+n).hide(),$("#logs-loading-"+n).show());var s=["CRITICAL","ERROR"];switch(t){case"DEBUG":s.push("DEBUG");case"INFO":s.push("INFO");case"WARNING":s.push("WARNING")}mongoRequest("logs","find",{session:session,node:e,levelname:{$in:s}},function(t){fetching_logs[n]=!1,renderLogs(t,e)})}function fetchLogs(e){fetchLogsForNode("master",e),fetchLogsForNode(selected_slave.id,e)}var smallest_time=1/0,biggest_time=-1/0,elapsed_time=0,time_scale=0,max_count=600,event_names=["hidden"],event_names_mapping={hidden:0},nodes=[],nodes_mapping={},selected_slave=null,current_min_time=null,current_max_time=null,series_data=[[],[]],fetching_events={master:!1,slave:!1},fetching_logs={master:!1,slave:!1},need_fetch=!1,too_many="too many events in the current interval",ui_is_setup=!1;mongoRequest("events","aggregate",[{$match:{session:session}},{$group:{_id:{instance:"$instance",name:"$name"},count:{$sum:1},min:{$min:"$time"},max:{$max:"$time"}}},{$group:{_id:"$_id.instance",details:{$addToSet:{name:"$_id.name",count:"$count",min:"$min",max:"$max"}}}}],function(e){var t={};e.forEach(function(e){e.details.forEach(function(e){t[e.name]=null});var n=nodes[nodes.push({id:e._id,initialized:!1,events:{}})-1];nodes_mapping[e._id]=nodes.length-1,e.details.forEach(function(e){e.fetch=!0,e.data=[],n.events[e.name]=e,smallest_time=Math.min(smallest_time,e.min),biggest_time=Math.max(biggest_time,e.max)})});for(var n in t)event_names_mapping[n]=event_names.push(n)-1;elapsed_time=biggest_time-smallest_time,time_scale=elapsed_time,current_min_time=smallest_time,current_max_time=biggest_time,series_data[0].push([{x:0,y:0},{x:elapsed_time,y:0}]),series_data[1].push([{x:0,y:0},{x:elapsed_time,y:0}]);for(var s=nodes[nodes_mapping.master],i=1;i<event_names.length;i++){var a=event_names[i];for(var m in nodes){var o=nodes[m];void 0===o.events[a]&&(o.events[a]={fetch:!1,data:[],count:0,min:smallest_time,max:biggest_time})}series_data[0].push(s.events[a].data),series_data[1].push([])}if(initialFetchEventsForNode(s),fetchLogsForNode("master","INFO"),nodes.length>1){for(var i in nodes)if("master"!=nodes[i].id){selected_slave=nodes[i];break}initialFetchEventsForNode(selected_slave),fetchLogsForNode(selected_slave.id,"INFO")}});